#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApplication1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TestManagement")]
	public partial class dbQLThiTracNghiemDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertTest_Examination(Test_Examination instance);
    partial void UpdateTest_Examination(Test_Examination instance);
    partial void DeleteTest_Examination(Test_Examination instance);
    partial void InsertAccountRequest(AccountRequest instance);
    partial void UpdateAccountRequest(AccountRequest instance);
    partial void DeleteAccountRequest(AccountRequest instance);
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertClass(Class instance);
    partial void UpdateClass(Class instance);
    partial void DeleteClass(Class instance);
    partial void InsertExamination(Examination instance);
    partial void UpdateExamination(Examination instance);
    partial void DeleteExamination(Examination instance);
    partial void InsertQuestion(Question instance);
    partial void UpdateQuestion(Question instance);
    partial void DeleteQuestion(Question instance);
    partial void InsertQuestion_Test(Question_Test instance);
    partial void UpdateQuestion_Test(Question_Test instance);
    partial void DeleteQuestion_Test(Question_Test instance);
    partial void InsertQuestionRequest(QuestionRequest instance);
    partial void UpdateQuestionRequest(QuestionRequest instance);
    partial void DeleteQuestionRequest(QuestionRequest instance);
    partial void InsertResult(Result instance);
    partial void UpdateResult(Result instance);
    partial void DeleteResult(Result instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertTeacher(Teacher instance);
    partial void UpdateTeacher(Teacher instance);
    partial void DeleteTeacher(Teacher instance);
    partial void InsertTest(Test instance);
    partial void UpdateTest(Test instance);
    partial void DeleteTest(Test instance);
    #endregion
		
		public dbQLThiTracNghiemDataContext() : 
				base(global::WindowsFormsApplication1.Properties.Settings.Default.TestManagementConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLThiTracNghiemDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLThiTracNghiemDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLThiTracNghiemDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLThiTracNghiemDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Test_Examination> Test_Examinations
		{
			get
			{
				return this.GetTable<Test_Examination>();
			}
		}
		
		public System.Data.Linq.Table<AccountRequest> AccountRequests
		{
			get
			{
				return this.GetTable<AccountRequest>();
			}
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<Class> Classes
		{
			get
			{
				return this.GetTable<Class>();
			}
		}
		
		public System.Data.Linq.Table<Examination> Examinations
		{
			get
			{
				return this.GetTable<Examination>();
			}
		}
		
		public System.Data.Linq.Table<Question> Questions
		{
			get
			{
				return this.GetTable<Question>();
			}
		}
		
		public System.Data.Linq.Table<Question_Test> Question_Tests
		{
			get
			{
				return this.GetTable<Question_Test>();
			}
		}
		
		public System.Data.Linq.Table<QuestionRequest> QuestionRequests
		{
			get
			{
				return this.GetTable<QuestionRequest>();
			}
		}
		
		public System.Data.Linq.Table<Result> Results
		{
			get
			{
				return this.GetTable<Result>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<Teacher> Teachers
		{
			get
			{
				return this.GetTable<Teacher>();
			}
		}
		
		public System.Data.Linq.Table<Test> Tests
		{
			get
			{
				return this.GetTable<Test>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAccount;
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<int> _role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAccountChanging(int value);
    partial void OnidAccountChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnroleChanging(System.Nullable<int> value);
    partial void OnroleChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAccount", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAccount
		{
			get
			{
				return this._idAccount;
			}
			set
			{
				if ((this._idAccount != value))
				{
					this.OnidAccountChanging(value);
					this.SendPropertyChanging();
					this._idAccount = value;
					this.SendPropertyChanged("idAccount");
					this.OnidAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(45)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(45)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="Int")]
		public System.Nullable<int> role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Test_Examination")]
	public partial class Test_Examination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idExamination;
		
		private int _idTest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidExaminationChanging(int value);
    partial void OnidExaminationChanged();
    partial void OnidTestChanging(int value);
    partial void OnidTestChanged();
    #endregion
		
		public Test_Examination()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idExamination", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idExamination
		{
			get
			{
				return this._idExamination;
			}
			set
			{
				if ((this._idExamination != value))
				{
					this.OnidExaminationChanging(value);
					this.SendPropertyChanging();
					this._idExamination = value;
					this.SendPropertyChanged("idExamination");
					this.OnidExaminationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTest", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idTest
		{
			get
			{
				return this._idTest;
			}
			set
			{
				if ((this._idTest != value))
				{
					this.OnidTestChanging(value);
					this.SendPropertyChanging();
					this._idTest = value;
					this.SendPropertyChanged("idTest");
					this.OnidTestChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountRequest")]
	public partial class AccountRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<int> _role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnroleChanging(System.Nullable<int> value);
    partial void OnroleChanged();
    #endregion
		
		public AccountRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(45)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(45)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="Int")]
		public System.Nullable<int> role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAdmin;
		
		private string _nameAdmin;
		
		private string _gender;
		
		private System.Nullable<int> _idAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAdminChanging(int value);
    partial void OnidAdminChanged();
    partial void OnnameAdminChanging(string value);
    partial void OnnameAdminChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnidAccountChanging(System.Nullable<int> value);
    partial void OnidAccountChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAdmin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAdmin
		{
			get
			{
				return this._idAdmin;
			}
			set
			{
				if ((this._idAdmin != value))
				{
					this.OnidAdminChanging(value);
					this.SendPropertyChanging();
					this._idAdmin = value;
					this.SendPropertyChanged("idAdmin");
					this.OnidAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameAdmin", DbType="NVarChar(45)")]
		public string nameAdmin
		{
			get
			{
				return this._nameAdmin;
			}
			set
			{
				if ((this._nameAdmin != value))
				{
					this.OnnameAdminChanging(value);
					this.SendPropertyChanging();
					this._nameAdmin = value;
					this.SendPropertyChanged("nameAdmin");
					this.OnnameAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="NVarChar(10)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAccount", DbType="Int")]
		public System.Nullable<int> idAccount
		{
			get
			{
				return this._idAccount;
			}
			set
			{
				if ((this._idAccount != value))
				{
					this.OnidAccountChanging(value);
					this.SendPropertyChanging();
					this._idAccount = value;
					this.SendPropertyChanged("idAccount");
					this.OnidAccountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Class")]
	public partial class Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _className;
		
		private System.Nullable<int> _grade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnclassNameChanging(string value);
    partial void OnclassNameChanged();
    partial void OngradeChanging(System.Nullable<int> value);
    partial void OngradeChanged();
    #endregion
		
		public Class()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_className", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string className
		{
			get
			{
				return this._className;
			}
			set
			{
				if ((this._className != value))
				{
					this.OnclassNameChanging(value);
					this.SendPropertyChanging();
					this._className = value;
					this.SendPropertyChanged("className");
					this.OnclassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="Int")]
		public System.Nullable<int> grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Examination")]
	public partial class Examination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idExamination;
		
		private string _nameExamination;
		
		private System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<int> _time;
		
		private System.Nullable<int> _countStudent;
		
		private string _type;
		
		private System.Nullable<int> _grade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidExaminationChanging(int value);
    partial void OnidExaminationChanged();
    partial void OnnameExaminationChanging(string value);
    partial void OnnameExaminationChanged();
    partial void OnstartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnstartTimeChanged();
    partial void OntimeChanging(System.Nullable<int> value);
    partial void OntimeChanged();
    partial void OncountStudentChanging(System.Nullable<int> value);
    partial void OncountStudentChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OngradeChanging(System.Nullable<int> value);
    partial void OngradeChanged();
    #endregion
		
		public Examination()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idExamination", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idExamination
		{
			get
			{
				return this._idExamination;
			}
			set
			{
				if ((this._idExamination != value))
				{
					this.OnidExaminationChanging(value);
					this.SendPropertyChanging();
					this._idExamination = value;
					this.SendPropertyChanged("idExamination");
					this.OnidExaminationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameExamination", DbType="NVarChar(100)")]
		public string nameExamination
		{
			get
			{
				return this._nameExamination;
			}
			set
			{
				if ((this._nameExamination != value))
				{
					this.OnnameExaminationChanging(value);
					this.SendPropertyChanging();
					this._nameExamination = value;
					this.SendPropertyChanged("nameExamination");
					this.OnnameExaminationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="Int")]
		public System.Nullable<int> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countStudent", DbType="Int")]
		public System.Nullable<int> countStudent
		{
			get
			{
				return this._countStudent;
			}
			set
			{
				if ((this._countStudent != value))
				{
					this.OncountStudentChanging(value);
					this.SendPropertyChanging();
					this._countStudent = value;
					this.SendPropertyChanged("countStudent");
					this.OncountStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(10)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="Int")]
		public System.Nullable<int> grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Question")]
	public partial class Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idQuestion;
		
		private string _subject;
		
		private System.Nullable<int> _grade;
		
		private string _question;
		
		private string _answerA;
		
		private string _answerB;
		
		private string _answerC;
		
		private string _answerD;
		
		private string _answerTrue;
		
		private System.Nullable<int> _hardlevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidQuestionChanging(int value);
    partial void OnidQuestionChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OngradeChanging(System.Nullable<int> value);
    partial void OngradeChanged();
    partial void OnquestionChanging(string value);
    partial void OnquestionChanged();
    partial void OnanswerAChanging(string value);
    partial void OnanswerAChanged();
    partial void OnanswerBChanging(string value);
    partial void OnanswerBChanged();
    partial void OnanswerCChanging(string value);
    partial void OnanswerCChanged();
    partial void OnanswerDChanging(string value);
    partial void OnanswerDChanged();
    partial void OnanswerTrueChanging(string value);
    partial void OnanswerTrueChanged();
    partial void OnhardlevelChanging(System.Nullable<int> value);
    partial void OnhardlevelChanged();
    #endregion
		
		public Question()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idQuestion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idQuestion
		{
			get
			{
				return this._idQuestion;
			}
			set
			{
				if ((this._idQuestion != value))
				{
					this.OnidQuestionChanging(value);
					this.SendPropertyChanging();
					this._idQuestion = value;
					this.SendPropertyChanged("idQuestion");
					this.OnidQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="NVarChar(50)")]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="Int")]
		public System.Nullable<int> grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question", DbType="NVarChar(400)")]
		public string question
		{
			get
			{
				return this._question;
			}
			set
			{
				if ((this._question != value))
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answerA", DbType="NVarChar(100)")]
		public string answerA
		{
			get
			{
				return this._answerA;
			}
			set
			{
				if ((this._answerA != value))
				{
					this.OnanswerAChanging(value);
					this.SendPropertyChanging();
					this._answerA = value;
					this.SendPropertyChanged("answerA");
					this.OnanswerAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answerB", DbType="NVarChar(100)")]
		public string answerB
		{
			get
			{
				return this._answerB;
			}
			set
			{
				if ((this._answerB != value))
				{
					this.OnanswerBChanging(value);
					this.SendPropertyChanging();
					this._answerB = value;
					this.SendPropertyChanged("answerB");
					this.OnanswerBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answerC", DbType="NVarChar(100)")]
		public string answerC
		{
			get
			{
				return this._answerC;
			}
			set
			{
				if ((this._answerC != value))
				{
					this.OnanswerCChanging(value);
					this.SendPropertyChanging();
					this._answerC = value;
					this.SendPropertyChanged("answerC");
					this.OnanswerCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answerD", DbType="NVarChar(100)")]
		public string answerD
		{
			get
			{
				return this._answerD;
			}
			set
			{
				if ((this._answerD != value))
				{
					this.OnanswerDChanging(value);
					this.SendPropertyChanging();
					this._answerD = value;
					this.SendPropertyChanged("answerD");
					this.OnanswerDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answerTrue", DbType="NVarChar(100)")]
		public string answerTrue
		{
			get
			{
				return this._answerTrue;
			}
			set
			{
				if ((this._answerTrue != value))
				{
					this.OnanswerTrueChanging(value);
					this.SendPropertyChanging();
					this._answerTrue = value;
					this.SendPropertyChanged("answerTrue");
					this.OnanswerTrueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hardlevel", DbType="Int")]
		public System.Nullable<int> hardlevel
		{
			get
			{
				return this._hardlevel;
			}
			set
			{
				if ((this._hardlevel != value))
				{
					this.OnhardlevelChanging(value);
					this.SendPropertyChanging();
					this._hardlevel = value;
					this.SendPropertyChanged("hardlevel");
					this.OnhardlevelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Question_Test")]
	public partial class Question_Test : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTest;
		
		private int _idQuestion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTestChanging(int value);
    partial void OnidTestChanged();
    partial void OnidQuestionChanging(int value);
    partial void OnidQuestionChanged();
    #endregion
		
		public Question_Test()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTest", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idTest
		{
			get
			{
				return this._idTest;
			}
			set
			{
				if ((this._idTest != value))
				{
					this.OnidTestChanging(value);
					this.SendPropertyChanging();
					this._idTest = value;
					this.SendPropertyChanged("idTest");
					this.OnidTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idQuestion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idQuestion
		{
			get
			{
				return this._idQuestion;
			}
			set
			{
				if ((this._idQuestion != value))
				{
					this.OnidQuestionChanging(value);
					this.SendPropertyChanging();
					this._idQuestion = value;
					this.SendPropertyChanged("idQuestion");
					this.OnidQuestionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuestionRequest")]
	public partial class QuestionRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idStudent;
		
		private string _subject;
		
		private int _grade;
		
		private string _question;
		
		private string _answerA;
		
		private string _answerB;
		
		private string _answerC;
		
		private string _answerD;
		
		private string _answerTrue;
		
		private System.Nullable<int> _hardlevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidStudentChanging(int value);
    partial void OnidStudentChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OngradeChanging(int value);
    partial void OngradeChanged();
    partial void OnquestionChanging(string value);
    partial void OnquestionChanged();
    partial void OnanswerAChanging(string value);
    partial void OnanswerAChanged();
    partial void OnanswerBChanging(string value);
    partial void OnanswerBChanged();
    partial void OnanswerCChanging(string value);
    partial void OnanswerCChanged();
    partial void OnanswerDChanging(string value);
    partial void OnanswerDChanged();
    partial void OnanswerTrueChanging(string value);
    partial void OnanswerTrueChanged();
    partial void OnhardlevelChanging(System.Nullable<int> value);
    partial void OnhardlevelChanged();
    #endregion
		
		public QuestionRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idStudent", DbType="Int NOT NULL")]
		public int idStudent
		{
			get
			{
				return this._idStudent;
			}
			set
			{
				if ((this._idStudent != value))
				{
					this.OnidStudentChanging(value);
					this.SendPropertyChanging();
					this._idStudent = value;
					this.SendPropertyChanged("idStudent");
					this.OnidStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="Int NOT NULL")]
		public int grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question", DbType="NVarChar(400)")]
		public string question
		{
			get
			{
				return this._question;
			}
			set
			{
				if ((this._question != value))
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answerA", DbType="NVarChar(100)")]
		public string answerA
		{
			get
			{
				return this._answerA;
			}
			set
			{
				if ((this._answerA != value))
				{
					this.OnanswerAChanging(value);
					this.SendPropertyChanging();
					this._answerA = value;
					this.SendPropertyChanged("answerA");
					this.OnanswerAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answerB", DbType="NVarChar(100)")]
		public string answerB
		{
			get
			{
				return this._answerB;
			}
			set
			{
				if ((this._answerB != value))
				{
					this.OnanswerBChanging(value);
					this.SendPropertyChanging();
					this._answerB = value;
					this.SendPropertyChanged("answerB");
					this.OnanswerBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answerC", DbType="NVarChar(100)")]
		public string answerC
		{
			get
			{
				return this._answerC;
			}
			set
			{
				if ((this._answerC != value))
				{
					this.OnanswerCChanging(value);
					this.SendPropertyChanging();
					this._answerC = value;
					this.SendPropertyChanged("answerC");
					this.OnanswerCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answerD", DbType="NVarChar(100)")]
		public string answerD
		{
			get
			{
				return this._answerD;
			}
			set
			{
				if ((this._answerD != value))
				{
					this.OnanswerDChanging(value);
					this.SendPropertyChanging();
					this._answerD = value;
					this.SendPropertyChanged("answerD");
					this.OnanswerDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answerTrue", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string answerTrue
		{
			get
			{
				return this._answerTrue;
			}
			set
			{
				if ((this._answerTrue != value))
				{
					this.OnanswerTrueChanging(value);
					this.SendPropertyChanging();
					this._answerTrue = value;
					this.SendPropertyChanged("answerTrue");
					this.OnanswerTrueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hardlevel", DbType="Int")]
		public System.Nullable<int> hardlevel
		{
			get
			{
				return this._hardlevel;
			}
			set
			{
				if ((this._hardlevel != value))
				{
					this.OnhardlevelChanging(value);
					this.SendPropertyChanging();
					this._hardlevel = value;
					this.SendPropertyChanged("hardlevel");
					this.OnhardlevelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Result")]
	public partial class Result : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idExamination;
		
		private int _idStudent;
		
		private string _subject;
		
		private System.Nullable<double> _score;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidExaminationChanging(int value);
    partial void OnidExaminationChanged();
    partial void OnidStudentChanging(int value);
    partial void OnidStudentChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OnscoreChanging(System.Nullable<double> value);
    partial void OnscoreChanged();
    #endregion
		
		public Result()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idExamination", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idExamination
		{
			get
			{
				return this._idExamination;
			}
			set
			{
				if ((this._idExamination != value))
				{
					this.OnidExaminationChanging(value);
					this.SendPropertyChanging();
					this._idExamination = value;
					this.SendPropertyChanged("idExamination");
					this.OnidExaminationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idStudent", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idStudent
		{
			get
			{
				return this._idStudent;
			}
			set
			{
				if ((this._idStudent != value))
				{
					this.OnidStudentChanging(value);
					this.SendPropertyChanging();
					this._idStudent = value;
					this.SendPropertyChanged("idStudent");
					this.OnidStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_score", DbType="Float")]
		public System.Nullable<double> score
		{
			get
			{
				return this._score;
			}
			set
			{
				if ((this._score != value))
				{
					this.OnscoreChanging(value);
					this.SendPropertyChanging();
					this._score = value;
					this.SendPropertyChanged("score");
					this.OnscoreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idStudent;
		
		private string _nameStudent;
		
		private string _gender;
		
		private string _class;
		
		private System.Nullable<int> _idAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidStudentChanging(int value);
    partial void OnidStudentChanged();
    partial void OnnameStudentChanging(string value);
    partial void OnnameStudentChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnclassChanging(string value);
    partial void OnclassChanged();
    partial void OnidAccountChanging(System.Nullable<int> value);
    partial void OnidAccountChanged();
    #endregion
		
		public Student()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idStudent", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idStudent
		{
			get
			{
				return this._idStudent;
			}
			set
			{
				if ((this._idStudent != value))
				{
					this.OnidStudentChanging(value);
					this.SendPropertyChanging();
					this._idStudent = value;
					this.SendPropertyChanged("idStudent");
					this.OnidStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameStudent", DbType="NVarChar(45)")]
		public string nameStudent
		{
			get
			{
				return this._nameStudent;
			}
			set
			{
				if ((this._nameStudent != value))
				{
					this.OnnameStudentChanging(value);
					this.SendPropertyChanging();
					this._nameStudent = value;
					this.SendPropertyChanged("nameStudent");
					this.OnnameStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="NVarChar(10)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="class", Storage="_class", DbType="NVarChar(10)")]
		public string @class
		{
			get
			{
				return this._class;
			}
			set
			{
				if ((this._class != value))
				{
					this.OnclassChanging(value);
					this.SendPropertyChanging();
					this._class = value;
					this.SendPropertyChanged("@class");
					this.OnclassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAccount", DbType="Int")]
		public System.Nullable<int> idAccount
		{
			get
			{
				return this._idAccount;
			}
			set
			{
				if ((this._idAccount != value))
				{
					this.OnidAccountChanging(value);
					this.SendPropertyChanging();
					this._idAccount = value;
					this.SendPropertyChanged("idAccount");
					this.OnidAccountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teacher")]
	public partial class Teacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTeacher;
		
		private string _nameTeacher;
		
		private string _class;
		
		private string _gender;
		
		private System.Nullable<int> _idAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTeacherChanging(int value);
    partial void OnidTeacherChanged();
    partial void OnnameTeacherChanging(string value);
    partial void OnnameTeacherChanged();
    partial void OnclassChanging(string value);
    partial void OnclassChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnidAccountChanging(System.Nullable<int> value);
    partial void OnidAccountChanged();
    #endregion
		
		public Teacher()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTeacher", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTeacher
		{
			get
			{
				return this._idTeacher;
			}
			set
			{
				if ((this._idTeacher != value))
				{
					this.OnidTeacherChanging(value);
					this.SendPropertyChanging();
					this._idTeacher = value;
					this.SendPropertyChanged("idTeacher");
					this.OnidTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameTeacher", DbType="NVarChar(45)")]
		public string nameTeacher
		{
			get
			{
				return this._nameTeacher;
			}
			set
			{
				if ((this._nameTeacher != value))
				{
					this.OnnameTeacherChanging(value);
					this.SendPropertyChanging();
					this._nameTeacher = value;
					this.SendPropertyChanged("nameTeacher");
					this.OnnameTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="class", Storage="_class", DbType="NVarChar(10)")]
		public string @class
		{
			get
			{
				return this._class;
			}
			set
			{
				if ((this._class != value))
				{
					this.OnclassChanging(value);
					this.SendPropertyChanging();
					this._class = value;
					this.SendPropertyChanged("@class");
					this.OnclassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="NVarChar(10)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAccount", DbType="Int")]
		public System.Nullable<int> idAccount
		{
			get
			{
				return this._idAccount;
			}
			set
			{
				if ((this._idAccount != value))
				{
					this.OnidAccountChanging(value);
					this.SendPropertyChanging();
					this._idAccount = value;
					this.SendPropertyChanged("idAccount");
					this.OnidAccountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Test")]
	public partial class Test : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTest;
		
		private string _nameTest;
		
		private System.Nullable<int> _time;
		
		private string _subject;
		
		private System.Nullable<int> _grade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTestChanging(int value);
    partial void OnidTestChanged();
    partial void OnnameTestChanging(string value);
    partial void OnnameTestChanged();
    partial void OntimeChanging(System.Nullable<int> value);
    partial void OntimeChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OngradeChanging(System.Nullable<int> value);
    partial void OngradeChanged();
    #endregion
		
		public Test()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTest", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTest
		{
			get
			{
				return this._idTest;
			}
			set
			{
				if ((this._idTest != value))
				{
					this.OnidTestChanging(value);
					this.SendPropertyChanging();
					this._idTest = value;
					this.SendPropertyChanged("idTest");
					this.OnidTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameTest", DbType="VarChar(100)")]
		public string nameTest
		{
			get
			{
				return this._nameTest;
			}
			set
			{
				if ((this._nameTest != value))
				{
					this.OnnameTestChanging(value);
					this.SendPropertyChanging();
					this._nameTest = value;
					this.SendPropertyChanged("nameTest");
					this.OnnameTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="Int")]
		public System.Nullable<int> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="NVarChar(50)")]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="Int")]
		public System.Nullable<int> grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
